// Generated by CoffeeScript 1.6.3
(function() {
  define(function(require, exports, module) {
    var Engine, GridLayout, StateModifier, Surface, Transform, grid, i, mainContext, surfaces, _fn, _i, _results;
    Engine = require('famous/core/Engine');
    Surface = require('famous/core/Surface');
    GridLayout = require('famous/views/GridLayout');
    StateModifier = require('famous/modifiers/StateModifier');
    Transform = require('famous/core/Transform');
    mainContext = Engine.createContext();
    grid = new GridLayout({
      dimensions: [8, 8]
    });
    surfaces = [];
    grid.sequenceFrom(surfaces);
    _fn = function(i) {
      var surface;
      surface = new Surface({
        content: i + 1,
        size: [void 0, void 0],
        properties: {
          backgroundColor: 'hsl(' + (i * 360 / 8) + ', 62%, 62%)',
          color: 'black',
          border: 'solid black',
          lineHeight: window.innerHeight / 8 + 'px',
          textAlign: 'center'
        }
      });
      surface.on("click", function() {
        var modifier, stateModifier, transitionableTransform;
        surface.setProperties({
          backgroundColor: "#878785"
        });
        stateModifier = new StateModifier();
        stateModifier.setTransform(Transform.translate(300, 300, 100), {
          duration: 1000,
          curve: "easeInOut"
        });
        transitionableTransform = new TransitionableTransform();
        transitionableTransform.setScale([3, 3, 1], {
          duration: 3000
        });
        modifier = new Modifier({
          origin: [.5, .5],
          transform: transitionableTransform
        });
        return mainContext.add(stateModifier).add(modifier).add(surface);
      });
      return surfaces.push(surface);
    };
    _results = [];
    for (i = _i = 1; _i <= 64; i = ++_i) {
      _fn(i);
      _results.push(mainContext.add(grid));
    }
    return _results;
  });

}).call(this);
