// Generated by CoffeeScript 1.6.3
(function() {
  define(function(require, exports, module) {
    var Engine, GridLayout, Modifier, StateModifier, Surface, Transform, TransitionableTransform, grid, i, mainContext, modifiers, surfaces, transitionableTransform, _fn, _i;
    Engine = require('famous/core/Engine');
    Surface = require('famous/core/Surface');
    GridLayout = require('famous/views/GridLayout');
    StateModifier = require('famous/modifiers/StateModifier');
    Transform = require('famous/core/Transform');
    TransitionableTransform = require("famous/transitions/TransitionableTransform");
    Modifier = require("famous/core/Modifier");
    mainContext = Engine.createContext();
    transitionableTransform = new TransitionableTransform();
    transitionableTransform.setScale([2, 2, 0], {
      duration: 3000
    });
    modifiers = (function() {
      var _i, _results;
      _results = [];
      for (i = _i = 1; _i <= 64; i = ++_i) {
        _results.push(new Modifier({
          transform: transitionableTransform
        }));
      }
      return _results;
    })();
    console.log(modifiers);
    grid = new GridLayout({
      dimensions: [8, 8],
      modifiers: modifiers
    });
    surfaces = [];
    grid.sequenceFrom(surfaces);
    _fn = function(i) {
      var surface;
      surface = new Surface({
        content: i + 1,
        size: [void 0, void 0],
        properties: {
          backgroundColor: 'hsl(' + (i * 360 / 8) + ', 62%, 62%)',
          color: 'black',
          border: 'solid black',
          lineHeight: window.innerHeight / 8 + 'px',
          textAlign: 'center'
        }
      });
      surface.on("click", function() {
        surface.setProperties({
          backgroundColor: "#878785"
        });
        return mainContext.add(modifier).add(surface);
      });
      return surfaces.push(surface);
    };
    for (i = _i = 1; _i <= 64; i = ++_i) {
      _fn(i);
    }
    return mainContext.add(grid);
  });

}).call(this);
